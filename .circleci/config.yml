# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

# Workflows orchestrate a set of jobs to be run;
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test

jobs:

  build-and-test:
    macos:
      xcode: 13.0.0 # Specify the Xcode version to use

    steps:
      - checkout

      # restore pods related caches
      - restore_cache:
          keys:
            - 1-gems-{{ checksum "Gemfile.lock" }}

      # make sure we're on the right version of cocoapods
      - run:
          name: Verify Cocoapods Version
          command: bundle check || bundle install --path vendor/bundle

      # save cocoapods version gem data
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # restore pods related caches
      - restore_cache:
          keys:
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}
            - cocoapods-cache-v5

      # install CocoaPods - using default CocoaPods version, not the bundle
      - run:
          name: Repo Update & Install CocoaPods
          command: make ci-pod-install

      # save pods related files
      - save_cache:
          name: Saving CocoaPods Cache
          key: cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
          paths:
            - ./Pods
            - ~/.cocoapods

      - run:
          name: Lint Source Code
          command: make lint

      # pre-start the simulator to prevent timeouts
      - run:
          name: Pre-start iOS Simulator
          command: xcrun instruments -w "iPhone 8 (13.5) [" || true

      - run:
          name: Run iOS Tests
          command: make test-ios

      # code coverage
      - run:
          name: Download Codecov Uploader
          command: |
            curl -s https://codecov.io/bash > codecov;
            VERSION=$(grep 'VERSION=\"[0-9\.]*\"' codecov | cut -d'"' -f2);
            for i in 1 256 512
            do
              shasum -a $i -c --ignore-missing <(curl -s "https://raw.githubusercontent.com/codecov/codecov-bash/${VERSION}/SHA${i}SUM") ||
              shasum -a $i -c <(curl -s "https://raw.githubusercontent.com/codecov/codecov-bash/${VERSION}/SHA${i}SUM" | grep -w "codecov")
            done

      - run:
          name: Upload Code Coverage Report for iOS
          command: bash ./codecov -v -X s3 -c -D "./build/out" -J "AEPEdge"

      - run:
          name: Pre-start tvOS Simulator
          command: xcrun instruments -w "Apple TV (15.0) [" || true

      - run:
          name: Run tvOS Tests
          command: make test-tvos

      - run:
          name: Upload Code Coverage Reports for tvOS
          command: bash ./codecov -v -X s3 -c -D "./build/out" -J "AEPEdge tvOS"

      # verify XCFramework archive builds
      # ci-archive updates Pods so run this step last
      - run:
          name: Build XCFramework
          command: |
            if [[ "${CIRCLE_BRANCH}" == "main" || "${CIRCLE_BRANCH}" == "staging" ]]; then
              make ci-archive
            fi
