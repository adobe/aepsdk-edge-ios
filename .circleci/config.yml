# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

jobs:
  build:

    macos:
      xcode: 11.0.0 # Specify the Xcode version to use

    steps:
      - checkout

    # restore pods related caches
      - restore_cache:
          keys:
            - cocoapods-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "build/xcode/Podfile.lock" }}
            - cocoapods-cache-v1-{{ arch }}-{{ .Branch }}
            - cocoapods-cache-v1
            - 1-gems-{{ checksum "Gemfile.lock" }}

      # make sure we're on the right version of cocoapods
      - run:
          name: Verify Cocoapods Version
          command: bundle check || bundle install --path vendor/bundle

      # save cocoapods version gem data
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # update CocoaPods
      - run: make setup

      # save pods related files
      - save_cache:
          key: cocoapods-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "build/xcode/Podfile.lock" }}
          paths:
            - ./build/xcode/Pods
            - ~/.cocoapods


      - run: make test # Run tests using Fastlane

      # Collect XML test results data to show in the UI, and save the same XML
      # files under test-results folder in the Artifacts tab
      - store_test_results:
          path: test_output
      - store_artifacts:
          path: test_output
          destination: scan-output

workflows:
  version: 2
  build-test:
    jobs:
      - build:
          filters:
            branches:
              only:
                - ci-test
                - /ci-test-.*/
                - circleci-project-setup
                - /pull\/.*/
