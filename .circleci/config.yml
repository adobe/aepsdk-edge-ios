# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

orbs:
  # codecov: codecov/codecov@3.2.5
  macos: circleci/macos@2

# Workflows orchestrate a set of jobs to be run
workflows:
  build-test:
    jobs:
      - validate-code
      - test-ios:
          requires:
            - validate-code
      - test-tvos:
          requires:
            - validate-code
      # The following jobs are conditional on branch name
      - test-ios-integration:
          requires:
            - validate-code
          filters:
            branches:
              only:
                - main
                - staging
      - build_xcframework_and_app:
          requires:
            - validate-code
          filters:
            branches:
              only:
                - main
                - staging

commands:
  install_dependencies:
    steps:
      # restore pods related caches
      - restore_cache:
          name: Restoring Gemfile Cache
          keys:
            - 1-gems-{{ checksum "Gemfile.lock" }}

      # make sure we're on the right version of cocoapods
      - run:
          name: Verify Cocoapods Version
          command: bundle check || bundle install --path vendor/bundle

      # save cocoapods version gem data
      - save_cache:
          name: Saving Gemfile Cache
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # restore pods related caches
      - restore_cache:
          name: Restoring CocoaPods Cache
          keys:
            - cocoapods-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
            - cocoapods-cache-v6-{{ arch }}-{{ .Branch }}
            - cocoapods-cache-v6

      # install CocoaPods - using default CocoaPods version, not the bundle
      - run:
          name: Repo Update & Install CocoaPods
          command: make ci-pod-install

      # save pods related files
      - save_cache:
          name: Saving CocoaPods Cache
          key: cocoapods-cache-v6-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
          paths:
            - ./Pods
            - ./SampleApps/TestApp/Pods
            - ~/.cocoapods

  prestart_ios_simulator:
    steps:
      - macos/preboot-simulator:
          platform: "iOS"
          version: "17.2"
          device: "iPhone 15"

  prestart_tvos_simulator:
    steps:
      - macos/preboot-simulator:
          platform: "tvOS"
          version: "17.2"
          device: "Apple TV"

jobs:
  validate-code:
    macos:
      xcode: 15.1.0 # Specify the Xcode version to use

    steps:
      - checkout

      - install_dependencies

      - run:
          name: Lint Source Code
          command: make lint

  test-ios:
    macos:
      xcode: 15.1.0 # Specify the Xcode version to use
    resource_class: macos.m1.medium.gen1

    steps:
      - checkout

      - install_dependencies

      - prestart_ios_simulator

      - run:
          name: Run iOS Unit Tests
          command: make unit-test-ios

      # Code coverage upload using Codecov
      # See options explanation here: https://docs.codecov.com/docs/codecov-uploader
      # - codecov/upload:
      #     flags: ios-unit-tests
      #     upload_name: Coverage report for iOS unit tests
      #     xtra_args: -c -v --xc --xp build/reports/iosUnitResults.xcresult

      - run:
          name: Run iOS Functional Tests
          command: make functional-test-ios
          when: always # run even if unit tests fail

      # - codecov/upload:
      #     flags: ios-functional-tests
      #     upload_name: Coverage report for iOS functional tests
      #     xtra_args: -c -v --xc --xp build/reports/iosFunctionalResults.xcresult

  test-ios-integration:
    macos:
      xcode: 15.1.0 # Specify the Xcode version to use

    steps:
      - checkout

      - install_dependencies

      - prestart_ios_simulator

      - run:
          name: Run iOS integration tests
          command: make test-integration-upstream

  test-tvos:
    macos:
      xcode: 15.1.0 # Specify the Xcode version to use
    resource_class: macos.m1.medium.gen1

    steps:
      - checkout

      - install_dependencies

      - prestart_tvos_simulator

      - run:
          name: Run tvOS Unit Tests
          command: make unit-test-tvos

      # Code coverage upload using Codecov
      # See options explanation here: https://docs.codecov.com/docs/codecov-uploader
      # - codecov/upload:
      #     flags: tvos-unit-tests
      #     upload_name: Coverage report for tvOS unit tests
      #     xtra_args: -c -v --xc --xp build/reports/tvosUnitResults.xcresult

      - run:
          name: Run tvOS Functional Tests
          command: make functional-test-tvos
          when: always # run even if unit tests fail

      # - codecov/upload:
      #     flags: tvos-functional-tests
      #     upload_name: Coverage report for tvOS functional tests
      #     xtra_args: -c -v --xc --xp build/reports/tvosFunctionalResults.xcresult

  build_xcframework_and_app:
    macos:
      xcode: 15.1.0 # Specify the Xcode version to use

    steps:
      - checkout
      # Verify XCFramework archive builds
      - run:
          name: Build XCFramework
          command: make archive
      # verify test app builds
      - run:
          name: Build Test App
          command: make build-app

