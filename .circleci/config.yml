# For a detailed guide to building and testing on iOS, read the docs:
# https://circleci.com/docs/2.0/testing-ios/

version: 2.1

orbs:
  codecov: codecov/codecov@3.2.4
  macos: circleci/macos@2

parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  
# Workflows orchestrate a set of jobs to be run;
workflows:
  version: 2
  build-test:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - validate-code
      - test-ios:
          requires:
            - validate-code
      - test-tvos:
          requires:
            - validate-code
      - build_xcframework_and_app:
          requires:
            - validate-code

commands: 
  install_dependencies:
    steps:
      # restore pods related caches
      - restore_cache:
          name: Restoring Gemfile Cache
          keys:
            - 1-gems-{{ checksum "Gemfile.lock" }}

      # make sure we're on the right version of cocoapods
      - run:
          name: Verify Cocoapods Version
          command: bundle check || bundle install --path vendor/bundle

      # save cocoapods version gem data
      - save_cache:
          name: Saving Gemfile Cache
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # restore pods related caches
      - restore_cache:
          name: Restoring CocoaPods Cache
          keys:
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
            - cocoapods-cache-v5-{{ arch }}-{{ .Branch }}
            - cocoapods-cache-v5

      # install CocoaPods - using default CocoaPods version, not the bundle
      - run:
          name: Repo Update & Install CocoaPods
          command: make ci-pod-install

      # save pods related files
      - save_cache:
          name: Saving CocoaPods Cache
          key: cocoapods-cache-v5-{{ arch }}-{{ .Branch }}-{{ checksum "Podfile.lock" }}
          paths:
            - ./Pods
            - ./SampleApps/TestApp/Pods
            - ~/.cocoapods

  prestart_ios_simulator:
    steps:
      - macos/preboot-simulator:
          platform: "iOS"
          device: "iPhone 8"

  prestart_tvos_simulator:
    steps:
      - macos/preboot-simulator:
          platform: "tvOS"
          device: "Apple TV"

jobs:
  validate-code:
    macos:
      xcode: 13.4.0 # Specify the Xcode version to use

    steps:
      - checkout

      - install_dependencies

      - run:
          name: Lint Source Code
          command: make lint

  test-ios:
    macos:
      xcode: 13.4.0 # Specify the Xcode version to use

    steps:
      - checkout

      - install_dependencies

      - prestart_ios_simulator

      - run:
          name: Run iOS Tests
          command: make test-ios

      # Code coverage upload using Codecov
      # See options explanation here: https://docs.codecov.com/docs/codecov-uploader
      - codecov/upload:
          flags: ios-tests
          upload_name: Coverage Report for iOS Tests
          xtra_args: -c -v --xc --xp iosresults.xcresult
  
  test-tvos:
    macos:
      xcode: 13.4.0 # Specify the Xcode version to use

    steps:
      - checkout

      - install_dependencies

      - prestart_tvos_simulator
      
      - run:
          name: Run tvOS Tests
          command: make test-tvos

      # Code coverage upload using Codecov
      # See options explanation here: https://docs.codecov.com/docs/codecov-uploader
      - codecov/upload:
          flags: tvos-tests
          upload_name: Coverage Report for tvOS Tests
          xtra_args: -c -v --xc --xp tvosresults.xcresult

  build_xcframework_and_app:  
    macos:
      xcode: 13.4.0 # Specify the Xcode version to use
    
    steps:
      - checkout
      # verify XCFramework archive builds
      - run:
          name: Build XCFramework
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              make archive
            fi
      # verify test app builds
      - run:
          name: Build Test App
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              make build-app
            fi
        
